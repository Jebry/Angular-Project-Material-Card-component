{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\nimport { HttpClient} from '@angular/common/http';\nimport { empty } from 'rxjs';\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'assignment4-BasharJebry';\n  videos;\n  orginalData;\n  categories=[\"Learning\",\"christian Songs\",\"Rap\"];\n  chosenCata=\"All\";\n  chosenVideos=[];\n  getAvatar(thumbnailUrl){\n   \n    for(let video of this.videos)\n    {\n      if (video.thumbnailUrl==thumbnailUrl)\n      {\n        return \"url(\"+video.avatarUrl+\")\";\n      }\n    }\n  \n}\nwatchVideo(index){\n  console.log(index);\n  let inedexInside=0;\n  for(let video of this.videos){\n    \n    if(inedexInside==index){\n      window.open(video.url, \"_blank\");\n    }\n    inedexInside++;\n  }\n  \n}\n\n\n\nselectedvideos(){\n  this.videos=this.orginalData;\n  this.chosenVideos=[];\n  for(let video of this.videos){\n    if(video.category==this.chosenCata){\n      this.chosenVideos.push(video);\n    }\n    if(this.chosenCata==\"All\"){\n      this.chosenVideos.push(video);\n    }\n  }\n  this.videos=this.chosenVideos;\n}\n\n\n\n  constructor(http: HttpClient){\n    // fetch JSON data, subscribe() takes 2 callbacksconst \n    const URL = \"assets/videosData.json\";\n    http.get(URL).subscribe(data =>\n      {\n        // success\n        this.videos = data;\n        this.orginalData=data;\n      }, error => \n      {\n        // failed\n        var emptyArray=[];\n        this.videos=emptyArray;\n        console.log(error);\n      });\n    }\n  }\n\n","<h1>Angular Tutorials</h1>\n\n\n<select [(ngModel)]=\"chosenCata\" (ngModelChange)=\"selectedvideos()\">\n    <option value=\"All\">All</option>\n    <option value=\"Learning\">Learning</option>\n    <option value=\"christian Songs\">christian Songs</option>\n    <option value=\"Rap\">Rap</option>\n  </select>\n<div class=\"container\">\n<mat-card *ngFor=\"let video of videos; let i =index\">\n    <!-- 1. video thumbnail -->\n    <img mat-card-image src={{video.thumbnailUrl}}>\n    <mat-card-header>\n    <!-- 2. channel icon -->\n    <div mat-card-avatar class=\"channel-icon\" [ngStyle]=\"{'background-image': getAvatar(video.thumbnailUrl)}\"></div>\n    <!-- 3. video title -->\n    <mat-card-title>{{video.title}}</mat-card-title>\n    <!-- 4. channel name -->\n    <mat-card-subtitle>{{video.channel}}</mat-card-subtitle>\n    </mat-card-header>\n    <mat-card-actions>\n    <!-- 5. button -->\n    <button mat-raised-button color=\"primary\" (click)=\"watchVideo(i)\">WATCH</button>\n    </mat-card-actions>\n    </mat-card>\n</div>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { MatTableModule} from '@angular/material/table';\nimport { MatButtonModule} from '@angular/material/button';\nimport { MatCardModule} from '@angular/material/card';\nimport { AppComponent } from './app.component';\nimport { FormsModule} from '@angular/forms';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { HttpClientModule} from '@angular/common/http';\nimport {MatSelectModule} from '@angular/material/select';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    MatCardModule,\n    MatButtonModule,\n    MatTableModule,\n    BrowserAnimationsModule,\n    FormsModule,\n    HttpClientModule,\n    MatSelectModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}